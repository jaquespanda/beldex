{
   "kind": "pipeline",
   "name": "Static (bionic amd64)",
   "platform": {
      "arch": "amd64"
   },
   "steps": [
      {
         "commands": [
            "git fetch --tags",
            "git submodule update --init --recursive --depth=1"
         ],
         "image": "drone/git",
         "name": "submodules"
      },
      {
         "commands": [
            "echo \"Building on ${DRONE_STAGE_MACHINE}\"",
            "echo \"man-db man-db/auto-update boolean false\" | debconf-set-selections",
            "apt-get -o=Dpkg::Use-Pty=0 -q update",
            "apt-get -o=Dpkg::Use-Pty=0 -q install -y eatmydata",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q dist-upgrade -y",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y --no-install-recommends cmake git ca-certificates ninja-build ccache g++-8 autoconf automake make qttools5-dev file libtool gperf pkg-config patch openssh-client gdb",
            "mkdir build",
            "cd build",
            "cmake .. -G Ninja -DCMAKE_CXX_FLAGS=-fdiagnostics-color=always -DCMAKE_BUILD_TYPE=Release -DLOCAL_MIRROR=https://builds.lokinet.dev/deps -DUSE_LTO=ON -DBUILD_STATIC_DEPS=ON -DCMAKE_C_COMPILER=gcc-8 -DCMAKE_CXX_COMPILER=g++-8 -DARCH=x86-64",
            "ninja -j4 -v",
            "(sleep 3; echo \"status\ndiff\nexit\") | TERM=xterm ../utils/build_scripts/drone-gdb.sh ./bin/beldexd --offline --data-dir=startuptest",
            "../utils/build_scripts/drone-check-static-libs.sh",
            "ninja strip_binaries",
            "ninja create_tarxz",
            "../utils/build_scripts/drone-bionic-upload.sh"
         ],
         "environment": {
            "GTEST_FILTER": "-AddressFromURL.Failure:DNSResolver.DNSSEC*",
            "SSH_KEY": {
               "from_secret": "SSH_KEY"
            }
         },
         "image": "ubuntu:bionic",
         "name": "build"
      },
      {
         "commands": [
            "echo \"man-db man-db/auto-update boolean false\" | debconf-set-selections",
            "apt-get -o=Dpkg::Use-Pty=0 -q update",
            "apt-get -o=Dpkg::Use-Pty=0 -q install -y eatmydata",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q dist-upgrade -y",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y --no-install-recommends git ssh curl ca-certificates binutils make",
            "curl -sSL https://deb.nodesource.com/setup_14.x | bash -",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q update",
            "eatmydata apt-get -o=Dpkg::Use-Pty=0 -q install -y nodejs",
            "git clone https://github.com/Beldex-Coin/beldex-electron-gui-wallet.git",
            "cp -v build/bin/beldexd beldex-electron-gui-wallet/bin",
            "cp -v build/bin/beldex-wallet-rpc beldex-electron-gui-wallet/bin",
            "cd beldex-electron-gui-wallet",
            "eatmydata npm install",
            "sed -i -e 's/^\\\\( *\"version\": \".*\\\\)\",/\\\\\\\\1-${DRONE_COMMIT_SHA:0:8}\",/' package.json",
            "eatmydata npm run build",
            "../utils/build_scripts/drone-wallet-upload.sh"
         ],
         "environment": {
            "SSH_KEY": {
               "from_secret": "SSH_KEY"
            }
         },
         "image": "ubuntu:bionic",
         "name": "GUI Wallet (dev)",
         "platform": {
            "arch": "amd64"
         }
      }
   ],
   "type": "docker"
}
